{"version":3,"sources":["components/Profile.module.css","components/Header/Header.module.css","components/common/SuperInput/SuperInput.module.css","components/Password/ForgotPassword.module.scss","components/common/Modal/Modal.module.css","components/common/SuperButton/SuperButton.module.css","components/common/SuperCheckbox/SuperCheckbox.module.css","components/common/Error/Error.module.scss","components/TestComponents/TestPage.module.css","components/Login/login.module.css","store/profile-reducer.ts","components/Profile.tsx","api/index.ts","store/register-Reducer.ts","components/Register/Register.tsx","components/common/Modal/Modal.tsx","components/common/SuperButton/SuperButton.tsx","components/common/SuperInput/SuperInput.tsx","components/common/Error/Error.tsx","api/forgot-api.ts","store/forgot-password-reducer.ts","components/Password/CheckEmail.tsx","components/Password/ForgotPassword.tsx","components/Password/NewPassword.tsx","components/ErrorPage.tsx","components/Header/Header.tsx","api/login-api.ts","store/login-reducer.ts","components/Login/Login.tsx","components/common/SuperCheckbox/SuperCheckbox.tsx","components/TestComponents/TestPage.tsx","App.tsx","reportWebVitals.ts","store/new-password-reducer.ts","store/store.ts","index.tsx"],"names":["module","exports","initialState","_id","email","name","avatar","publicCardPacksCount","isAdmin","verified","rememberMe","Profile","useSelector","state","profile","storeName","storeEmail","dispatch","useDispatch","useState","setName","setEmail","className","s","profileBlock","src","alt","date","description","value","onChange","e","currentTarget","buttons","onClick","type","ChangeNameAC","ChangeEmailAC","instance","axios","create","withCredentials","baseURL","headers","authAPI","password","post","isError","errorText","isLoading","register","setError","error","resetErrorText","setLoading","Register","loading","setPassword","useEffect","replace","to","placeholder","a","isAxiosError","response","data","userRegistration","disabled","Modal","props","children","subtitle","style","container","containerBody","title","SuperButton","red","restProps","finalClassName","button","default","SuperInput","label","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","input","input__error","inputField","aria-required","key","inputField__error","Error","error_block","forgotAPI","forgotPasswordError","status","forgotStatus","CheckEmail","ForgotPassword","from","message","setData","forgotPassword","onSubmit","console","log","preventDefault","forgot","id","target","forgotBottom","NewPassword","ErrorPage","Header","link","authApi","updated","created","isLoggedIn","setIsLoggedInAC","getUserAC","Login","res","loginTC","SuperCheckbox","onChangeChecked","checkbox","checked","TestPage","column","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","RootReducer","combineReducers","action","login","newPassword","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69982a71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileBlock\":\"Profile_profileBlock__s1eTP\",\"avatar\":\"Profile_avatar__2w09x\",\"date\":\"Profile_date__1JBTA\",\"description\":\"Profile_description__8u-FR\",\"buttons\":\"Profile_buttons__fwNvu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Header_active__2BaGD\",\"container\":\"Header_container__1gmUQ\",\"link\":\"Header_link__3uFxL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"SuperInput_inputField__UOvKG\",\"inputField__error\":\"SuperInput_inputField__error__2Fcod\",\"input\":\"SuperInput_input__gYYE0\",\"input__error\":\"SuperInput_input__error__2jHjF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgot\":\"ForgotPassword_forgot__Hb2M2\",\"forgotBottom\":\"ForgotPassword_forgotBottom__338dl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Modal_container__3hhJX\",\"containerBody\":\"Modal_containerBody__2NtX1\",\"title\":\"Modal_title__2i-tO\",\"subtitle\":\"Modal_subtitle__1rT2i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__26jbz\",\"blink\":\"SuperButton_blink__3o6gZ\",\"default\":\"SuperButton_default__1yabd\",\"red\":\"SuperButton_red__2EzkG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__3cMO7\",\"checkbox\":\"SuperCheckbox_checkbox__2zOh-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_block\":\"Error_error_block__2C-Cs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"TestPage_column__1IbTW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-wrapper\":\"login_login-wrapper__2SXhK\"};","type initialStateType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n\r\n    // created: Date;\r\n    // updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n\r\n    error?: string;\r\n}\r\n\r\nexport const initialState: initialStateType = {\r\n    _id: '1',\r\n    email: 'someEmail@umail.com',\r\n    name: 'Andrey',\r\n    avatar: 'https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500',\r\n    publicCardPacksCount: 2,\r\n    isAdmin: false,\r\n    verified: false,\r\n    rememberMe: false\r\n}\r\n\r\nexport const ChangeNameAC = (name: string) => (\r\n    {\r\n        type: 'CHANGE-NAME',\r\n        name\r\n    } as const\r\n)\r\n\r\nexport const ChangeEmailAC = (email: string) => (\r\n    {\r\n        type: 'CHANGE-MAIL',\r\n        email\r\n    } as const\r\n)\r\n\r\n\r\ntype ActionsType =\r\n    ReturnType<typeof ChangeNameAC>\r\n    | ReturnType<typeof ChangeEmailAC>\r\n\r\nexport const profileReducer = (state: initialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'CHANGE-NAME':\r\n            return {...state, name: action.name}\r\n\r\n        case 'CHANGE-MAIL':\r\n            return {...state, email: action.email}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from './Profile.module.css'\r\nimport {AppRootStateType} from \"../store/store\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ChangeEmailAC, ChangeNameAC} from \"../store/profile-reducer\";\r\n\r\nexport const Profile = () => {\r\n\r\n    const avatar = useSelector<AppRootStateType, string | undefined>(state => state.profile.avatar)\r\n    const storeName = useSelector<AppRootStateType, string>(state => state.profile.name)\r\n    const storeEmail = useSelector<AppRootStateType, string>(state => state.profile.email)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [name, setName] = useState<string>(storeName)\r\n    const [email, setEmail] = useState<string>(storeEmail)\r\n\r\n    const onChangeNick = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value)\r\n    }\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const onClickSave = () => {\r\n        dispatch(ChangeNameAC(name))\r\n        dispatch(ChangeEmailAC(email))\r\n    }\r\n\r\ndebugger\r\n\r\n    return (\r\n        <div className={s.profileBlock}>\r\n\r\n            <h3>Personal Information</h3>\r\n\r\n            <img className={s.avatar} src={avatar} alt={'avatar'}/>\r\n\r\n            <div className={s.date}>\r\n\r\n                <span className={s.description}>NickName</span>\r\n                <input value={name} onChange={onChangeNick}/>\r\n\r\n                <span className={s.description}>email</span>\r\n                <input value={email} onChange={onChangeEmail}/>\r\n\r\n            </div>\r\n\r\n            <div className={s.buttons}>\r\n                <button>Cancel</button>\r\n                <button onClick={onClickSave}>Save</button>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    headers: {},\r\n});\r\n\r\nexport const authAPI = {\r\n    registration(email: string, password: string) {\r\n        return instance.post('/auth/register', {email, password})\r\n    }\r\n}\r\n","import {Dispatch} from 'redux'\r\nimport {authAPI} from '../api'\r\nimport axios from 'axios'\r\n\r\nconst initialState = {\r\n    email: '',\r\n    password: '',\r\n    isError: true,\r\n    errorText: '',\r\n    isLoading: false\r\n}\r\n\r\nexport const registerReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'register':\r\n            return {...state, email: action.email, password: action.password}\r\n        case 'error':\r\n            return {...state, isError: action.error}\r\n        case 'errorText':\r\n            return {...state, errorText: action.errorText}\r\n        case 'resetErrorText':\r\n            return {...state, errorText: action.value}\r\n        case 'loading':\r\n            return {...state, isLoading: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Actions\r\nexport const register = (email: string, password: string) => ({type: 'register', email, password} as const)\r\nexport const setError = (error: boolean) => ({type: 'error', error} as const)\r\nexport const errorText = (errorText: string) => ({type: 'errorText', errorText} as const)\r\nexport const resetErrorText = (value: string) => ({type: 'resetErrorText', value} as const)\r\nexport const setLoading = (value: boolean) => ({type: 'loading', value} as const)\r\n\r\n// Thunks\r\nexport const userRegistration = (email: string, password: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setLoading(true))\r\n        await authAPI.registration(email, password)\r\n        dispatch(setLoading(false))\r\n        dispatch(register(email, password))\r\n        dispatch(setError(false))\r\n    } catch (err) {\r\n        if (axios.isAxiosError(err) && err.response) {\r\n            dispatch(errorText(err.response.data.error))\r\n        }\r\n    }\r\n}\r\n\r\n// Types\r\ntype InitialStateType = {\r\n    email: string\r\n    password: string\r\n    isError: boolean\r\n    errorText?: string\r\n    isLoading: boolean\r\n}\r\n\r\ntype ActionTypes =\r\n    | ReturnType<typeof register>\r\n    | ReturnType<typeof setError>\r\n    | ReturnType<typeof errorText>\r\n    | ReturnType<typeof resetErrorText>\r\n    | ReturnType<typeof setLoading>","import {ChangeEvent, useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {resetErrorText, setError, setLoading, userRegistration} from '../../store/register-Reducer'\r\nimport {Navigate} from 'react-router-dom'\r\nimport {AppRootStateType} from '../../store/store'\r\n\r\nexport const Register = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const error = useSelector<AppRootStateType, boolean>(state => state.register.isError)\r\n    const errorText = useSelector<AppRootStateType, string | undefined>(state => state.register.errorText)\r\n    const loading = useSelector<AppRootStateType, boolean>(state => state.register.isLoading)\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    useEffect(() => {dispatch(setError(true))}, [error])\r\n\r\n    const onClickRegistration = () => dispatch(userRegistration(email, password))\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n        dispatch(resetErrorText(''))\r\n        dispatch(setLoading(false))\r\n    }\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n        dispatch(resetErrorText(''))\r\n        dispatch(setLoading(false))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {errorText}\r\n            {!errorText && loading && 'Loading...'}\r\n            {!error && <Navigate replace to={'/login'}/>}<br/>\r\n            <input type=\"text\" placeholder=\"email\" onChange={onChangeEmail}/><br/>\r\n            <input type=\"text\" placeholder=\"password\" onChange={onChangePassword}/><br/>\r\n            <button onClick={onClickRegistration} disabled={loading}>Registration</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport style from \"./Modal.module.css\";\r\n\r\ntype ModalPropsType = {\r\n    subtitle: string\r\n}\r\n\r\n\r\nexport const Modal: React.FC<ModalPropsType> = (props) => {\r\n    const {children, subtitle} = props\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.containerBody}>\r\n                <h1 className={style.title}>Card</h1>\r\n                <h2 className={style.subtitle}>{subtitle}</h2>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\r\nimport s from './SuperButton.module.css';\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<\r\n  ButtonHTMLAttributes<HTMLButtonElement>,\r\n  HTMLButtonElement\r\n>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n  red?: boolean;\r\n};\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = ({\r\n  red,\r\n  className,\r\n  ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\r\n}) => {\r\n  const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`;\r\n\r\n  return (\r\n    <button\r\n      className={finalClassName}\r\n      {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n    />\r\n  );\r\n};\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent,} from 'react';\r\nimport s from './SuperInput.module.css';\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void;\r\n    onEnter?: () => void;\r\n    error?: string;\r\n    spanClassName?: string;\r\n    label?: string\r\n};\r\n\r\nexport const SuperInput: React.FC<SuperInputTextPropsType> = ({\r\n                                                           label, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n                                                           onChange,\r\n                                                           onChangeText,\r\n                                                           onKeyPress,\r\n                                                           onEnter,\r\n                                                           error,\r\n                                                           className,\r\n                                                           spanClassName,\r\n                                                           ...restProps // все остальные пропсы попадут в объект restProps\r\n                                                       }) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange &&\r\n        onChange(e);\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    };\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter &&\r\n        e.key === 'Enter' &&\r\n        onEnter();\r\n    };\r\n\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`;\r\n    const finalInputClassName = `${s.input} ${error && s.input__error}`;\r\n\r\n    return (\r\n        <div className={s.inputField}>\r\n            <label aria-required={true}>{label}</label>\r\n            <input\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps}\r\n            />\r\n            <div className={s.inputField__error}>{error && <span className={finalSpanClassName}>{error}</span>}</div>\r\n        </div>\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport style from \"./Error.module.scss\";\r\n\r\ntype ErrorPropsType = {\r\n   error: string | null\r\n}\r\n\r\n\r\nexport const Error: React.FC<ErrorPropsType> = ({error}) => {\r\n\r\n   return <div className={style.error_block}>\r\n       <span>{error ? error : null}</span>\r\n   </div>\r\n}\r\n","import {instance} from \"./index\";\r\n\r\n\r\n// api\r\nexport const forgotAPI = {\r\n    forgot(data: ForgotType) {\r\n        return instance.post<ForgotResponseType>(\"auth/forgot\", data);\r\n    },\r\n    setNewPassword(data: SetType) {\r\n        return instance.post<ResponseType>(\"auth/set-new-password\", data);\r\n    },\r\n};\r\n\r\n\r\n// types\r\nexport type ForgotType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n};\r\nexport type ResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\nexport type ForgotResponseType =ResponseType & {\r\n    answer: boolean\r\n    html: boolean\r\n    success: boolean\r\n};\r\nexport type SetType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n};","import {forgotAPI, ForgotType} from \"../api/forgot-api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst initialState = {\r\n    forgotPasswordError: '',\r\n    status: 'idle'\r\n} as forgotPasswordType\r\n\r\nexport const forgotPasswordReducer = (state: forgotPasswordType = initialState, action: ActionTypes): forgotPasswordType => {\r\n    switch (action.type) {\r\n        case \"forgot-password/FORGOT-ERROR\":\r\n            return {...state, forgotPasswordError: action.value};\r\n        case \"forgot-password/FORGOT-STATUS\":\r\n            return {...state, status: action.value};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const forgotPasswordError = (value: string) => ({type: \"forgot-password/FORGOT-ERROR\", value} as const)\r\nexport const forgotStatus = (value: forgotStatusType) => ({type: \"forgot-password/FORGOT-STATUS\", value} as const)\r\n\r\n// thunks\r\nexport const forgotPassword = (data: ForgotType) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(forgotStatus(\"loading\"));\r\n        await forgotAPI.forgot(data);\r\n        dispatch(forgotStatus(\"succeeded\"));\r\n    } catch (e: any) {\r\n        dispatch(forgotStatus(\"failed\"));\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error)\r\n        dispatch(forgotPasswordError(error))\r\n    }\r\n};\r\n\r\n// types\r\ntype forgotPasswordType = {\r\n    forgotPasswordError: string\r\n    status: forgotStatusType\r\n}\r\ntype ActionTypes = ReturnType<typeof forgotPasswordError> | ReturnType<typeof forgotStatus>\r\nexport type forgotStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","import React from 'react';\r\nimport {Modal} from \"../common/Modal/Modal\";\r\n\r\nexport const CheckEmail: React.FC = () => {\r\n    return (\r\n        <Modal subtitle='Check Email'>\r\n            <div>\r\n                We have sent an email with instructions to your mail.\r\n            </div>\r\n        </Modal>)\r\n}\r\n","import React, {FormEvent, useState} from 'react';\r\nimport style from \"./ForgotPassword.module.scss\";\r\nimport {Modal} from \"../common/Modal/Modal\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {SuperInput} from \"../common/SuperInput/SuperInput\";\r\nimport {Error} from \"../common/Error/Error\";\r\nimport {forgotPassword, forgotPasswordError, forgotStatusType} from \"../../store/forgot-password-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {CheckEmail} from \"./CheckEmail\";\r\n\r\nexport const ForgotPassword: React.FC = () => {\r\n    const [data, setData] = useState({\r\n        email: '',\r\n        from: 'dz-friday-admin <jek-n@mail.ru>',\r\n        message: `<div style=\"background-color: orange; padding: 15px;\">\r\n        <a href='https://zariuz.github.io/dz-friday/#/set-new-password/$token$'>\r\n        Password recover link\r\n        </a></div>`\r\n    });\r\n\r\n    const status = useSelector<AppRootStateType, forgotStatusType>(state => state.forgotPassword.status)\r\n    const error = useSelector<AppRootStateType, string>(state => state.forgotPassword.forgotPasswordError);\r\n\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        dispatch(forgotPassword(data));\r\n        e.preventDefault();\r\n    };\r\n\r\n    if (status === \"succeeded\") {\r\n        dispatch(forgotPasswordError(''))\r\n        return <CheckEmail/>\r\n    }\r\n\r\n    return (\r\n        <Modal subtitle='Forgot your password?'>\r\n            <form onSubmit={handleSubmit} className={style.forgot}>\r\n                <SuperInput\r\n                    label='Email'\r\n                    type='email'\r\n                    id='email'\r\n                    value={data.email}\r\n                    onChange={e => setData({...data, email: e.target.value})}\r\n                />\r\n                <p>Enter your email address and we will send you further instructions</p>\r\n                <Error error={error}/>\r\n                <SuperButton>Send Instructions</SuperButton>\r\n            </form>\r\n            <div className={style.forgotBottom}>\r\n                <p>Did you remember your password?</p>\r\n                <NavLink to='/login'>Try logging in</NavLink>\r\n            </div>\r\n        </Modal>\r\n\r\n    );\r\n}","export const NewPassword = () => {\r\n    return <div>NewPassword</div>\r\n}","export const ErrorPage = () => {\r\n    return <div>404</div>\r\n}","import {NavLink} from 'react-router-dom'\r\nimport s from './Header.module.css';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.container}>\r\n            <NavLink className={s.link} to='/profile'> profile </NavLink>\r\n            <NavLink className={s.link} to='/register'> register </NavLink>\r\n            <NavLink className={s.link} to='/set-new-password'> newPass </NavLink>\r\n            <NavLink className={s.link} to='/forgot-password'> forgotPass</NavLink>\r\n            <NavLink className={s.link} to='/login'> login </NavLink>\r\n            <NavLink to='/testPage'> test </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n","\r\nimport {instance} from \"./index\";\r\n\r\nexport const authApi = {\r\n    login(data: LoginParamsType) {\r\n        return instance.post<CommonResponseType>('auth/login', data)\r\n    },\r\n/*    me() {\r\n        return instance.get<CommonResponseType<{id: number, email: string, login:string}>>('auth/me')\r\n    },*/\r\n    logout(){\r\n        return instance.delete<CommonResponseType>('auth/me')\r\n    }\r\n}\r\n\r\n\r\n\r\n//Types\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport type UserDataType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    token: string\r\n    tokenDeathTime: Date\r\n    __v: number\r\n};\r\ntype ErrorType = { error?: string };\r\nexport type CommonResponseType = UserDataType & ErrorType;","import {authApi, CommonResponseType, LoginParamsType, UserDataType} from \"../api/login-api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nconst initialState = {\r\n    _id: '',\r\n    avatar: '',\r\n    email: '',\r\n    isAdmin: false,\r\n    name: '',\r\n    publicCardPacksCount: 0,\r\n    rememberMe: false,\r\n    verified: false,\r\n    updated: {},\r\n    created: {},\r\n    isLoggedIn: false,\r\n} as UserDataDomainType;\r\n\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        case \"LOGIN/GET-USER\":\r\n            return {\r\n                ...state,\r\n                name: action.data.name,\r\n                avatar: action.data.avatar,\r\n                email: action.data.email,\r\n                _id: '',\r\n                isAdmin: action.data.isAdmin,\r\n                publicCardPacksCount: action.data.publicCardPacksCount,\r\n                rememberMe: action.data.rememberMe,\r\n                verified: action.data.verified,\r\n                updated: action.data.updated,\r\n                created: action.data.created,\r\n                isLoggedIn: true,\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// action\r\n\r\nexport const setIsLoggedInAC = (value: boolean) => ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\nexport const getUserAC = (data: CommonResponseType) => ({type: \"LOGIN/GET-USER\", data} as const)\r\n\r\n\r\n//thunks\r\n\r\nexport const loginTC = (data: LoginParamsType) => async (dispatch: Dispatch) => {\r\n    try {\r\n        let res = await authApi.login(data)\r\n        dispatch(setIsLoggedInAC(true))\r\n        dispatch(getUserAC(res.data))\r\n    } catch (e: any) {\r\n\r\n    }\r\n};\r\n\r\nexport const logoutTC = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        await authApi.logout()\r\n        dispatch(setIsLoggedInAC(false))\r\n    } catch (e: any) {\r\n\r\n    }\r\n};\r\n\r\n//types\r\n\r\nexport type ActionsType =\r\n    ReturnType<typeof setIsLoggedInAC> |\r\n    ReturnType<typeof getUserAC>\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nexport type UserDataDomainType = UserDataType & { isLoggedIn: boolean };\r\n\r\n","import React, {FormEvent, useState} from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport './login.module.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {loginTC} from \"../../store/login-reducer\";\r\nimport {Modal} from \"../common/Modal/Modal\";\r\nimport style from \"../Password/ForgotPassword.module.scss\";\r\nimport {SuperInput} from \"../common/SuperInput/SuperInput\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\n\r\nexport const Login = () => {\r\n    const [data, setData] = useState({email: '', password: '', rememberMe: false});\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        dispatch(loginTC(data));\r\n        e.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <Modal subtitle='Sign In'>\r\n            <form onSubmit={handleSubmit} className={style.forgot}>\r\n                <SuperInput\r\n                    label='Email'\r\n                    type='email'\r\n                    id='email'\r\n                    value={data.email}\r\n                    onChange={e => setData({...data, email: e.target.value})}\r\n                />\r\n                <SuperInput\r\n                    label='Password'\r\n                    type='password'\r\n                    id='email'\r\n                    value={data.password}\r\n                    onChange={e => setData({...data, password: e.target.value})}\r\n                />\r\n                <div>\r\n                    <SuperButton>Login</SuperButton>\r\n                </div>\r\n\r\n            </form>\r\n\r\n            <div>\r\n                <Link to=\"/forgot-password\">Forgot password</Link>\r\n            </div>\r\n\r\n\r\n            <p>Don't have an account?</p>\r\n\r\n            <div>\r\n                <Link to=\"/register\">Sign Up</Link>\r\n            </div>\r\n\r\n        </Modal>)\r\n}\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react';\r\nimport s from './SuperCheckbox.module.css';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void;\r\n  spanClassName?: string;\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = ({\r\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n  onChange,\r\n  onChangeChecked,\r\n  className,\r\n  spanClassName,\r\n  children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n  ...restProps // все остальные пропсы попадут в объект restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    // сделайте так чтоб работал onChange и onChangeChecked\r\n  };\r\n\r\n  const finalInputClassName = `${s.checkbox} ${className ? className : ''}`;\r\n\r\n  return (\r\n    <label>\r\n      <input\r\n        type={'checkbox'}\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n      />\r\n      {children && <span className={s.spanClassName}>{children}</span>}\r\n    </label> // благодаря label нажатие на спан передастся в инпут\r\n  );\r\n};\r\n\r\nexport default SuperCheckbox;\r\n","import SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {SuperInput} from \"../common/SuperInput/SuperInput\";\r\nimport SuperCheckbox from \"../common/SuperCheckbox/SuperCheckbox\";\r\nimport s from './TestPage.module.css'\r\n\r\nexport const TestPage = () => {\r\n    return <div className={s.column}>\r\n        <SuperButton>\r\n            button\r\n        </SuperButton>\r\n        <SuperInput/>\r\n        <SuperCheckbox/>\r\n    </div>\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Routes, Route} from \"react-router-dom\";\r\nimport {Profile} from \"./components/Profile\";\r\nimport {Register} from \"./components/Register/Register\";\r\nimport {ForgotPassword} from \"./components/Password/ForgotPassword\";\r\nimport {NewPassword} from \"./components/Password/NewPassword\";\r\nimport {ErrorPage} from \"./components/ErrorPage\";\r\nimport {Header} from \"./components/Header/Header\";\r\nimport {Login} from \"./components/Login/Login\";\r\nimport {TestPage} from \"./components/TestComponents/TestPage\";\r\n\r\n\r\nexport const App = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <Routes>\r\n                <Route path='/profile' element={<Profile/>}/>\r\n                <Route path='/' element={<Profile/>}/>\r\n                <Route path='/login' element={<Login/>}/>\r\n                <Route path='/register' element={<Register/>}/>\r\n                <Route path='/forgot-password' element={<ForgotPassword/>}/>\r\n                <Route path='/set-new-password' element={<NewPassword/>}/>\r\n                <Route path='/testPage' element={<TestPage/>}/>\r\n                <Route path='*' element={<ErrorPage/>}/>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initialState = {}\r\n\r\nexport const newPasswordReducer = (state: any = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case 'res-pass': {\r\n            return {...state}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport {registerReducer} from \"./register-Reducer\";\r\nimport {newPasswordReducer} from \"./new-password-reducer\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {forgotPasswordReducer} from \"./forgot-password-reducer\";\r\n\r\nconst RootReducer = combineReducers({\r\n    register: registerReducer,\r\n    forgotPassword: forgotPasswordReducer,\r\n    login: loginReducer,\r\n    profile: profileReducer,\r\n    newPassword: newPasswordReducer,\r\n})\r\n\r\nexport const store = createStore(RootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof RootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}